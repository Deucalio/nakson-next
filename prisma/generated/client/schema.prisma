// schema.prisma

generator client {
    provider = "prisma-client-js"
    // binaryTargets = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-1.1.x", "rhel-openssl-1.0.x"]
    output   = "./generated/client"
}

// datasource db {
//     provider = "postgresql"
//     url      = env("DATABASE_URL")
// }

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
    id         Int       @id @default(autoincrement())
    first_name String
    last_name  String
    email      String    @unique
    password   String
    phone      String
    address    String
    joinedat   DateTime  @default(now())
    stores     Store[]
    Courier    Courier[]
}

model Store {
    id              Int    @id @unique @default(autoincrement())
    name            String
    image_url       String
    image_public_id String
    store_info      Json
    user_id         Int
    user            User   @relation(fields: [user_id], references: [id])
}

model Courier {
    id       Int    @id @unique @default(autoincrement())
    name     String
    data     Json
    shippers Json
    user_id  Int
    user     User   @relation(fields: [user_id], references: [id])
}
// Define a model to hold the temporary data
model TemporaryData {
  id        Int      @id @default(autoincrement())
  email     String
  data      Json
  createdAt DateTime @default(now())
}